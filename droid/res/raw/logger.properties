# Der ConsoleHandler gibt die Nachrichten auf std.err aus
handlers= com.android.internal.logging.AndroidHandler
#, java.util.logging.ConsoleHandler

# Alternativ k\u00f6nnen weitere Handler hinzugenommen werden. Hier z.B. der Filehandler
#handlers= java.util.logging.FileHandler, java.util.logging.ConsoleHandler

# Festlegen des Standard Loglevels
.level=ALL


############################################################
# Handler specific properties.
# Describes specific configuration info for Handlers.
############################################################

# Die Nachrichten in eine Datei im Benutzerverzeichnis schreiben
java.util.logging.FileHandler.pattern = %h/java%u.log
java.util.logging.FileHandler.limit = 50000
java.util.logging.FileHandler.count = 1
java.util.logging.FileHandler.formatter = java.util.logging.XMLFormatter

# Zus\u00e4tzlich zu den normalen Logleveln kann f\u00fcr jeden Handler noch ein eigener Filter 
# vergeben werden. Das ist n\u00fctzlich wenn beispielsweise alle Nachrichten auf der Konsole ausgeben werden sollen
# aber nur ab INFO in das Logfile geschrieben werden soll.
#java.util.logging.ConsoleHandler.level = ALL
#java.util.logging.ConsoleHandler.formatter = java.util.logging.SimpleFormatter

# Android logging handler
#java.util.logging.AndroidHandler.level = ALL
#java.util.logging.AndroidHandler.formatter = java.util.logging.SimpleFormatter
com.android.internal.logging.AndroidHandler.level = FINEST
com.android.internal.logging.AndroidHandler.formatter = java.util.logging.SimpleFormatter

############################################################
# Extraeinstellungen f\u00fcr einzelne Logger
############################################################

# F\u00fcr einzelne Logger kann ein eigenes Loglevel festgelegt werden.
#candis.client.level = FINEST
candis.common.FSM.level = FINEST
candis.common.MessageConnection = ALL
#log.tag.<YOUR_LOG_TAG>=<LEVEL>