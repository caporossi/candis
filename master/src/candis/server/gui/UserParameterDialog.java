package candis.server.gui;

import candis.distributed.parameter.UserParameter;
import candis.distributed.parameter.UserParameterSet;
import java.util.LinkedList;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Sebastian Willenborg
 */
public class UserParameterDialog extends javax.swing.JDialog {

	private final UserParameterSet mUserParameterSet;
	private final List<ParameterContainer> mParameterContainers = new LinkedList<ParameterContainer>();
	private boolean mValidParameters = false;

	public boolean parametersAreValid() {
		return mValidParameters;
	}
	/**
	 * Creates new form UserParameterDialog
	 */
	public UserParameterDialog(java.awt.Frame parent, UserParameterSet parameterSet) {
		super(parent, true);
		initComponents();
		mUserParameterSet = parameterSet;
		initParameters();
		setLocationRelativeTo(parent);
	}

	private void initParameters() {
		if (mUserParameterSet == null) {
			return;
		}
		mParametersPanel.setLayout(new java.awt.GridBagLayout());
		int i = 0;
		for (UserParameter param : mUserParameterSet) {
			ParameterContainer cont = ParameterContainer.getContainer(param);
			cont.addToDialog(mParametersPanel, i++);
			mParameterContainers.add(cont);
		}
		pack();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {
    java.awt.GridBagConstraints gridBagConstraints;

    mTopLabel = new javax.swing.JLabel();
    mOKButton = new javax.swing.JButton();
    mParametersPanel = new javax.swing.JPanel();
    mCancelButton = new javax.swing.JButton();

    setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
    setTitle("Parameters");
    setAlwaysOnTop(true);
    setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
    setResizable(false);
    addWindowListener(new java.awt.event.WindowAdapter() {
      public void windowClosing(java.awt.event.WindowEvent evt) {
        formWindowClosing(evt);
      }
    });
    getContentPane().setLayout(new java.awt.GridBagLayout());

    mTopLabel.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
    mTopLabel.setText("User Parameters");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
    gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
    getContentPane().add(mTopLabel, gridBagConstraints);

    mOKButton.setText("OK");
    mOKButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        mOKButtonActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHEAST;
    gridBagConstraints.weightx = 0.1;
    gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
    getContentPane().add(mOKButton, gridBagConstraints);

    org.jdesktop.layout.GroupLayout mParametersPanelLayout = new org.jdesktop.layout.GroupLayout(mParametersPanel);
    mParametersPanel.setLayout(mParametersPanelLayout);
    mParametersPanelLayout.setHorizontalGroup(
      mParametersPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
      .add(0, 400, Short.MAX_VALUE)
    );
    mParametersPanelLayout.setVerticalGroup(
      mParametersPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
      .add(0, 229, Short.MAX_VALUE)
    );

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 0.6;
    gridBagConstraints.weighty = 0.5;
    getContentPane().add(mParametersPanel, gridBagConstraints);

    mCancelButton.setText("Cancel");
    mCancelButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        mCancelButtonActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.LAST_LINE_END;
    gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
    getContentPane().add(mCancelButton, gridBagConstraints);

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void mOKButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mOKButtonActionPerformed
		boolean valid = true;
		for (ParameterContainer cont : mParameterContainers) {
			valid &= cont.validate();
		}
		mValidParameters = valid;
		if (valid) {
			this.setVisible(false);
		}
		else {
			JOptionPane.showMessageDialog(this, "One/some of your parameters are invalid! Please use valid values.");
		}
  }//GEN-LAST:event_mOKButtonActionPerformed

  private void mCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mCancelButtonActionPerformed

		this.setVisible(false);
		mValidParameters = false;
  }//GEN-LAST:event_mCancelButtonActionPerformed

  private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
		int showConfirmDialog = JOptionPane.showConfirmDialog(this, "You are about to close the parameters dialog, the task won't be started!\nAbort?", "Abort", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
		if (showConfirmDialog == JOptionPane.OK_OPTION) {
			this.setVisible(false);
			mValidParameters = false;
		}
  }//GEN-LAST:event_formWindowClosing

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
		 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		}
		catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(UserParameterDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(UserParameterDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(UserParameterDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(UserParameterDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/* Create and display the dialog */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				UserParameterDialog dialog = new UserParameterDialog(new javax.swing.JFrame(), null);
				dialog.addWindowListener(new java.awt.event.WindowAdapter() {
					@Override
					public void windowClosing(java.awt.event.WindowEvent e) {
						System.exit(0);
					}
				});
				dialog.setVisible(true);
			}
		});
	}
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton mCancelButton;
  private javax.swing.JButton mOKButton;
  private javax.swing.JPanel mParametersPanel;
  private javax.swing.JLabel mTopLabel;
  // End of variables declaration//GEN-END:variables
}
